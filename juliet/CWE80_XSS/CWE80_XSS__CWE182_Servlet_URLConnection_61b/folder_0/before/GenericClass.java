public class GenericClass {
public void genericMethod () throws Throwable{
    String data;
    data = "";
    /* Initialize data */
    /* read input from URLConnection */
    {
        URLConnection urlConnection = (new URL("http://www.example.org/")).openConnection();
        BufferedReader readerBuffered = null;
        InputStreamReader readerInputStream = null;
        try {
            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), "UTF-8");
            readerBuffered = new BufferedReader(readerInputStream);
            /* POTENTIAL FLAW: Read data from a web server with URLConnection */
            /* This will be reading the first "line" of the response body,
                 * which could be very long if there are no newlines in the HTML */
            data = readerBuffered.readLine();
        } catch (IOException exceptIO) {
            IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
        } finally {
            /* clean up stream reading objects */
            try {
                if (readerBuffered != null) {
                    readerBuffered.close();
                }
            } catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error closing BufferedReader", exceptIO);
            }
            try {
                if (readerInputStream != null) {
                    readerInputStream.close();
                }
            } catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error closing InputStreamReader", exceptIO);
            }
        }
    }
    return data;
}
}