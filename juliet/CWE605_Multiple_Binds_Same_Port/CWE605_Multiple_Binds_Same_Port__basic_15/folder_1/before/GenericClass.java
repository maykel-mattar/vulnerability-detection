public class GenericClass {
public void genericMethod () throws Throwable{
    switch(7) {
        case 7:
            ServerSocket socket1 = null;
            ServerSocket socket2 = null;
            try {
                socket1 = new ServerSocket();
                socket1.bind(new InetSocketAddress(15000));
                socket2 = new ServerSocket();
                /* FLAW: This will bind a second Socket to port 15000, but only for connections from localhost */
                socket2.bind(new InetSocketAddress("localhost", 15000));
            } catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Unable to bind a socket", exceptIO);
            } finally {
                try {
                    if (socket2 != null) {
                        socket2.close();
                    }
                } catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing Socket", exceptIO);
                }
                try {
                    if (socket1 != null) {
                        socket1.close();
                    }
                } catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing Socket", exceptIO);
                }
            }
            break;
        default:
            /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
            IO.writeLine("Benign, fixed string");
            break;
    }
}
}